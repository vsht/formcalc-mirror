#! /bin/bash
# configure script for FormCalc-generated code
# note: has nothing to do with GNU autoconf
# last modified 29 Jul 18 th


exec 2> ${LOGFILE:-/dev/null} 3>&1
eval ${LOGFILE:+set -x}

shopt -s nullglob
export LC_ALL=C

CONF_DIR="${0%/*}"
CONF_OS="`uname -s`"
CONF_OSVER="`uname -r`"
CONF_MACH="`uname -m`"
CONF_DEFPREFIX="$CONF_MACH-$CONF_OS"
CONF_PREFIX="$CONF_DEFPREFIX"
CONF_TARGET=
CONF_STATIC=
CONF_STATIC_EXT=
CONF_STATIC_GFORTRAN=
CONF_QUAD=
CONF_QUADSIZE=16
CONF_REAL10=
CONF_DEBUG=
CONF_BITS=
CONF_MCLIBS=
CONF_ARCH="-march=native"
CONF_MAKEARGS=
CONF_AS=
CONF_EXE=
CONF_LDFLAGS=

case "$CONF_OS" in
  # Mma 5.1's mcc needs -lpthread for static linking
Linux)	CONF_MCLIBS=" -lpthread -lrt" ;;
Darwin)	CONF_LDFLAGS="-Wl,-no_compact_unwind"
	test "${CONF_OSVER::2}" = 10 && CONF_STDLIBS="-lSystemStubs"
	CONF_AS="-Wa,-q" ;;
  # need static linkage at least for libgfortran, to reliably get
  # our constructor executed before libgfortran's in MathLink code
CYG*)	CONF_LDFLAGS="-Wl,--image-base,0x10000000"
	CONF_STATIC_GFORTRAN="-static-libgfortran"
	CONF_EXE=".exe" ;;
esac

for arg in "$@" ; do
  case "$arg" in
  --prefix=*)
	CONF_PREFIX="${arg#--prefix=}" ;;
  --host=*)
	CONF_TARGET="${arg#--host=}" ;;
  --static)
	test "$CONF_OS" = Darwin &&
	  CONF_STATIC_EXT=1 ||
	  CONF_STATIC="-static" ;;
  --quad)
	CONF_QUAD=1 ;;
  --real10)
	CONF_REAL10=1
	CONF_QUADSIZE=10 ;;
  --debug | --debug=*)
	[[ "$arg" =~ --debug=(.*) ]]
	CONF_DEBUG="${BASH_REMATCH[1]:-1}" ;;
  --32)
	CONF_BITS="-m32" ;;
  --64)
	CONF_BITS="-m64" ;;
  --generic)
	CONF_ARCH= CONF_AS= ;;
  --make=*)
	CONF_MAKEARGS="${arg#*=}" ;;
  --help)
	cat << _EOF_ 1>&3
$0 configures FormCalc-generated code, i.e. determines or guesses
the compiler and flags and writes out a makefile.

$0 understands the following options:

--prefix=DIR
	use DIR as installation directory
--host=HOST
	target host triplet, e.g. i386-pc-linux
--static
	link the executables statically
--quad
	compile with quadruple precision (ifort, gfortran 4.6+, xlf only)
--real10
	use REAL*10 instead of REAL*16 (gfortran 4.6+ only)
--debug[=level]
	compile with debug flags and without optimization
--32
	force 32-bit compilation
--64
	force 64-bit compilation
--generic
	do not specifically target the CPU configure runs on

_EOF_
	exit 0 ;;
  -*)
	echo "Warning: $arg is not a valid option." 1>&3 ;;
  *=*)
	eval "$arg" ;;
  *)
	echo "Warning: $arg is not a valid argument." 1>&3 ;;
  esac
done


test=test$$
trap "rm -fr $test* =." 0 1 2 3 15


## look for some programs

findprog() {
  echo -n "looking for $1... " 1>&3
  var="$2"
  set -- ${!var:+"${!var}"} "${@:3}"
  test -n "$CONF_TARGET" && for prog in "$@" ; do
    full="`type -P "$CONF_TARGET-$prog"`" && {
      echo "$full" 1>&3
      printf -v "CONF_$var" "%q" "$CONF_TARGET-$prog"
      return 0
    }
  done
  for prog in "$@" ; do
    full="`type -P "$prog"`" && {
      echo "$full" 1>&3
      printf -v "CONF_$var" "%q" "$prog"
      return 0
    }
  done
  echo "no $@ in your path" 1>&3
  return 1
}


findprog gcc CC clang gcc || exit 1

findprog g++ CXX clang++ g++ || exit 1

findprog fortran FC ${CONF_REAL10:+gfortran} ${CONF_QUAD:+ifort gfortran xlf} ifort pgf90 xlf gfortran g95 f90 || exit 1


setflags() {
  rhs= ${2:+printf -v rhs "${IFS:0:1}%q" "${@:2}"}
  eval "CONF_$1=\"\${rhs//\\\\,/,}\""
}

set -- `eval $CONF_FC --version -c | sed '/^$/d;s/(.*)//;q' 2>&1`
case "$1,$2,$3" in
GNU,Fortran,[123].*)
  CONF_SIMD=0
  eval setflags FFLAGS "$FFLAGS \
-ffixed-line-length-none -fno-range-check \
$CONF_ARCH $CONF_AS $CONF_BITS \
$CONF_STATIC \
$CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g -Wall"
  eval setflags FFLAGSOPT "-O1"
  ;;
GNU,Fortran,4.*)
  CONF_SIMD=0
  eval setflags FFLAGS "$FFLAGS \
-ffixed-line-length-none -fno-range-check \
$CONF_ARCH $CONF_AS $CONF_BITS \
${CONF_QUAD:+-freal-8-real-$CONF_QUADSIZE} \
${CONF_STATIC:-$CONF_STATIC_GFORTRAN} ${CONF_STATIC_EXT:+-static-libgfortran -static-libgcc} \
$CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g \
-Wall -Wno-unused-dummy-argument -Wtabs -ffpe-trap=invalid,overflow,zero"
  eval setflags FFLAGSOPT "-O3"
  ;;
GNU,Fortran,*)
  CONF_SIMD=0
  eval setflags FFLAGS "$FFLAGS \
-ffixed-line-length-none -fno-range-check \
$CONF_ARCH $CONF_AS $CONF_BITS \
${CONF_QUAD:+-freal-8-real-$CONF_QUADSIZE} \
${CONF_STATIC:-$CONF_STATIC_GFORTRAN} ${CONF_STATIC_EXT:+-static-libgfortran -static-libgcc} \
$CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g \
-Wall -Wno-unused-dummy-argument -Wno-tabs -ffpe-trap=invalid,overflow,zero"
  eval setflags FFLAGSOPT "-O3"
  ;;
pgf*)
  CONF_CPPLIBS=-pgc++libs
  eval setflags FFLAGS "$FFLAGS \
-Mextend -g77libs \
${CONF_ARCH:+-Mvect=simd} $CONF_BITS \
${CONF_STATIC:+-Bstatic} ${CONF_STATIC_EXT:+-Bstatic_pgi} \
$CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g -Minform=inform -Ktrap=fp"
  eval setflags FFLAGSOPT "-O3"
  ;;
ifort*)
  CONF_QUADSIZE=16
  eval setflags FFLAGS "$FFLAGS \
-debug -extend_source -warn truncated_source -warn nouncalled -assume bscc \
$CONF_ARCH $CONF_BITS \
${CONF_QUAD:+-r16 -DDBLE=QEXT -DDIMAG=QIMAG -DDCONJG=QCONJG -DDCMPLX=QCMPLX} \
$CONF_STATIC ${CONF_STATIC_EXT:+-static-intel} \
$CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g"
  eval setflags FFLAGSOPT "-O3"
  ;;
*)
  eval setflags FFLAGS "$FFLAGS $CONF_LDFLAGS"
  eval setflags FFLAGSDEB "-O0 -g"
  eval setflags FFLAGSOPT "-O"
  ;;
esac


## find the Fortran libraries

echo -n "extracting the Fortran libraries... " 1>&3

rm -fr $test*

tee $test.f << _EOF_ 1>&2
	program test
	integer i
	common /uscore/ i
	call exit(i)
	end
_EOF_

while read line ; do
  set -- ${line//[:,()]/ }
  [[ "$1" =~ (/collect2|/ld|^ld)$CONF_EXE$ ]] && while test $# -gt 1 ; do
    shift
    case "$1" in
    *.o | -lc*)
      ;;
    -l* | -L* | *.a)
      FLDFLAGS+=" $1" ;;
    -Bstatic | -Bdynamic | *.ld)
      FLDFLAGS+=" -Wl,$1" ;;
    /*)
      FLDFLAGS+=" -L$1" ;;
    -rpath*)
      FLDFLAGS+=" -Wl,$1,$2"
      shift ;;
    -dynamic-linker)
      shift ;;
    esac
  done
done < <(eval $CONF_FC$CONF_FFLAGS -v -o $test $test.f 2>&1)

eval setflags LDFLAGS "$LDFLAGS $CONF_LDFLAGS $FLDFLAGS"

echo "ok" 1>&3


[[ "`eval $CONF_CC --version -c 2>&1`" =~ gcc ]] && CONF_STATIC_GCC="$CONF_STATIC_EXT"

eval setflags CFLAGS "$CFLAGS \
$CONF_STATIC ${CONF_STATIC_GCC:+-static-libgcc}"
eval setflags CFLAGSDEB "-O0 -g -Wall"
eval setflags CFLAGSOPT "-O3 -g -fomit-frame-pointer -ffast-math"

eval setflags CXXFLAGS "$CXXFLAGS \
$CONF_STATIC ${CONF_STATIC_GCC:+-static-libstdc++ -static-libgcc}"

eval setflags MCFLAGS "$MCFLAGS \
${CONF_STATIC:+-st} ${CONF_STATIC_EXT:+-st} ${CONF_BITS/m/b}"


## does Fortran append underscores to symbols?

echo -n "does $CONF_FC append underscores... " 1>&3

tee $test-c.c << _EOF_ 1>&2
int uscore_ = 95;
int uscore = 59;
_EOF_

for CONF_BITS in ${CONF_BITS:--m64 -m32} ; do
  eval $CONF_CC$CONF_CFLAGS $CONF_BITS -c $test-c.c 1>&2 || continue
  eval $CONF_FC$CONF_FFLAGS -o $test$CONF_EXE $test.f $test-c.o 1>&2 && break
done

./$test$CONF_EXE
case $? in
95)
  echo "yes" 1>&3
  CONF_NOUNDERSCORE=0 ;;
59)
  echo "no" 1>&3
  CONF_NOUNDERSCORE=1 ;;
*)
  echo "error linking Fortran and C" 1>&3
  exit 1 ;;
esac

CONF_CFLAGS+=" $CONF_BITS"
CONF_CXXFLAGS+=" $CONF_BITS"

test "$CONF_OS$CONF_BITS" = "Linux-m64" && CONF_LIBDIRSUFFIX=64


## does f77 support REAL*16?

echo -n "does $CONF_FC support REAL*$CONF_QUADSIZE... " 1>&3

rm -fr $test*

tee $test.f << _EOF_ 1>&2
	program test
	real*$CONF_QUADSIZE a, b
	a = 2D0**(52/2+2)
	b = a + 1/a
	if( a .eq. b ) call exit(1)
	end
_EOF_

eval $CONF_FC$CONF_FFLAGS -o $test$CONF_EXE $test.f 1>&2

./$test$CONF_EXE 1>&2 && {
  echo "yes" 1>&3
} || {
  echo "no" 1>&3
  CONF_QUADSIZE=0
}


## does Fortran need 'external' for U77 routines?

echo -n "does $CONF_FC need 'external' for U77 routines... " 1>&3

rm -fr $test*

tee $test.f << _EOF_ 1>&2
	program test
	implicit none
	print *, iargc(), len_trim("Hi")
	end
_EOF_

eval $CONF_FC$CONF_FFLAGS -c $test.f 1>&2 && {
  echo "no" 1>&3
  CONF_U77EXT=0
} || {
  echo "yes" 1>&3
  CONF_U77EXT=1
}


## are we on a big-endian machine?

echo -n "are we big-endian... " 1>&3

rm -fr $test*

tee $test.c << _EOF_ 1>&2
#include <stdio.h>
int main() {
  union { int i; char c; } u;
  u.i = 1;
  u.c = 0;
  return u.i;
}
_EOF_

eval $CONF_CC$CONF_CFLAGS -o $test$CONF_EXE $test.c 1>&2

./$test$CONF_EXE && {
  echo "no" 1>&3
  CONF_BIGENDIAN=0
} || {
  echo "yes" 1>&3
  CONF_BIGENDIAN=1
}


echo -n "testing SIMD capabilities of $CONF_FC... " 1>&3

test -z "$CONF_SIMD" && {
  tee $test.F << _EOF_ 1>&2
	subroutine add(a, b)
	double precision a(32), b(32)
	a = a + b
	end
_EOF_

  eval $CONF_FC $CONF_FFLAGS -S -o $test.s $test.F 1>&2

  grep zmm $test.s > /dev/null 2>&1 && CONF_SIMD=4 || {
    grep ymm $test.s > /dev/null 2>&1 && CONF_SIMD=2 || {
      grep xmm $test.s > /dev/null 2>&1 && CONF_SIMD=1 || CONF_SIMD=0
    }
  }
}

echo $CONF_SIMD 1>&3

grep "#define SIMD $CONF_SIMD" simd.h > /dev/null 2>&1 || cat > simd.h << _EOF_
#if 0
	vectorization ability of $CONF_FC on $HOSTNAME
	determined by $0 on `date`
#endif

#define SIMD $CONF_SIMD

_EOF_


## check for the necessary libraries

IFS=: eval setflags INCPATH "$INCPATH"
eval setflags LIBS "$LIBS"
eval setflags STDLIBS "$STDLIBS $CONF_STDLIBS ${CONF_QUAD:+-lquadmath}"

findlib() {
  echo -n "looking for $1... " 1>&3
  var="$2" patt="$3" libname="$4" inc="${5+/../$5}"
  eval 'set -- '"${!var:+\"${!var}/$libname\".[a]}"' \
{{..,../..,../../..,../../../..,"$HOME",/usr/local,/usr}/$patt,/usr/local,/usr}/\
{"$CONF_DEFPREFIX/lib$CONF_LIBDIRSUFFIX","lib$CONF_LIBDIRSUFFIX",lib,\
build${CONF_QUAD:+-quad},build,includects,libs,.libs,src,*/.libs,}/\
"$libname".[a]'
  test $# -eq 0 && {
    echo "not found" 1>&3
    return 1
  }
  path="${1%/*}"
  echo "$path" 1>&3
  test -n "$inc" && {
    test -d "$path$inc" || inc=
    CONF_INCPATH+=":\$($var)$inc"
  }
  CONF_LIBS+=" \$($var)/$libname.a"
  printf -v path "%q" "$path"
  CONF_MAKEVARS+="
$var = $path"
  return 0
}

findlib LoopTools LT 'LoopTools*' libooptools${CONF_QUAD:+-quad} include

findlib Ninja NINJA 'ninja*' libninja && CPPTEST+="
	call ninjaformcalc"

findlib Samurai SAMURAI 'samurai*' libsamurai samurai &&
  CONF_LIBS+=" \$(SAMURAI)/libqcdloop.a \$(SAMURAI)/libavh_olo.a"

findlib CutTools CT 'Cuttools*' libcts include

findlib FeynHiggs FH 'FeynHiggs*' libFH include

findlib LHAPDF-6 LHAPDF 'LHAPDF*' libLHAPDF && CPPTEST+="
	call InitPDF(0)" ||
findlib lhapdf-5 LHAPDF 'lhapdf*' libLHAPDF


## check whether we need -lstdc++ or -lc++ for linking

echo -n "checking for extra libraries... " 1>&3
tee $test.f << _EOF_ 1>&2
	program test
$CPPTEST
	end
_EOF_

for CONF_LIBCPP in "" $CONF_CPPLIBS -lstdc++ -lc++ {/usr/local,/usr}/\
{"$CONF_DEFPREFIX/lib$CONF_LIBDIRSUFFIX","lib$CONF_LIBDIRSUFFIX",lib}/\
[l]ib{std,}c++.{a,so,dylib} ; do
  make -f - << _EOF_ 1>&2 &&
$CONF_MAKEVARS
.PHONY: test
test:
	$CONF_FC$CONF_FFLAGS -o $test $test.f $CONF_LIBS $CONF_STDLIBS $CONF_LIBCPP
_EOF_
  { CONF_STDLIBS+=" $CONF_LIBCPP"
    break
  }
  CONF_LIBCPP=FAILED
done
echo "$CONF_LIBCPP" 1>&3


echo "creating makefile" 1>&3

cat - "$CONF_DIR/makefile.in" > makefile << _EOF_
# --- variables defined by configure ---

SRC = $CONF_DIR
QUADSUFFIX = ${CONF_QUAD:+-quad}
PREFIX = $CONF_PREFIX
LIBDIRSUFFIX = $CONF_LIBDIRSUFFIX
EXE = $CONF_EXE

DEBUG ?= ${CONF_DEBUG:-0}
NOUNDERSCORE = $CONF_NOUNDERSCORE
QUAD = ${CONF_QUAD:-0}
QUADSIZE = $CONF_QUADSIZE
$CONF_MAKEVARS
INCPATH = ${CONF_INCPATH:1}
STDLIBS =$CONF_LIBS$CONF_STDLIBS

FC = $CONF_FC
FFLAGSDEB =$CONF_FFLAGSDEB -DDEBUG=\$(DEBUG)
FFLAGSOPT =$CONF_FFLAGSOPT
FFLAGS = \$(FFLAGS\$(DEB))$CONF_FFLAGS \\
  -DQUAD=\$(QUAD) -DQUADSIZE=\$(QUADSIZE) \\
  -DU77EXT=$CONF_U77EXT

CC = $CONF_CC
CFLAGSDEB =$CONF_CFLAGSDEB -DDEBUG=\$(DEBUG)
CFLAGSOPT =$CONF_CFLAGSOPT
CFLAGS = \$(CFLAGS\$(DEB))$CONF_CFLAGS \\
  -DQUAD=\$(QUAD) -DQUADSIZE=\$(QUADSIZE) \\
  -DNOUNDERSCORE=\$(NOUNDERSCORE) \\
  -DBIGENDIAN=$CONF_BIGENDIAN

CXX = $CONF_CXX
CXXFLAGS = \$(CFLAGS\$(DEB))$CONF_CXXFLAGS$CONF_STDCPP

MCFLAGS =$CONF_MCFLAGS
MCLIBS =$CONF_MCLIBS

LDFLAGS =$CONF_LDFLAGS

# --- end defs by configure ---

_EOF_


test -z "$CONF_MAKEARGS" && {
  echo "
now you must run make
" 1>&3
} || {
  make $CONF_MAKEARGS 1>&3 2>&3
}

exit 0

